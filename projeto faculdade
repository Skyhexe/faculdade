<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Minhas Listas</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    /* Estilo base da p√°gina */
    * {
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }

    body {
      margin: 0;
      background-color: #F9FAFB;
      color: #2D3748;
    }

    header {
      background: #C6F6D5;
      padding: 1.5rem;
      text-align: center;
      font-size: 1.8rem;
      font-weight: 600;
    }

    .container {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      padding: 2rem;
    }

    .lista {
      background-color: white;
      border-radius: 24px;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
      padding: 1.5rem;
      margin: 0.5rem;
      position: relative;
      flex: 1 1 340px;
      max-width: 400px;
    }

    .cabecalho {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    .titulo {
      font-weight: 600;
      font-size: 1.4rem;
    }

    .botao-menu {
      cursor: pointer;
      font-size: 1.4rem;
      position: relative;
    }

    .opcoes {
      position: absolute;
      top: 28px;
      right: 0;
      background: white;
      border: 1px solid #CBD5E0;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      z-index: 10;
      display: none;
      flex-direction: column;
    }

    .opcoes button {
      background: none;
      border: none;
      padding: 0.5rem 1rem;
      text-align: left;
      cursor: pointer;
      font-size: 0.95rem;
    }

    .opcoes button:hover {
      background-color: #EDF2F7;
    }

    .linha {
      border-top: 1px dashed #CBD5E0;
      margin: 0.8rem 0;
    }

    .tarefa {
      display: flex;
      align-items: center;
      margin: 0.5rem 0;
    }

    .tarefa input[type="checkbox"] {
      margin-right: 0.6rem;
    }

    .tarefa input[type="text"] {
      border: none;
      background: transparent;
      width: 100%;
      font-size: 1rem;
    }

    .tarefa input[type="text"]:focus {
      outline: none;
    }

    .tarefa.concluida input[type="text"] {
      text-decoration: line-through;
      opacity: 0.6;
    }

    .botao-fixo {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      background-color: #38B2AC;
      color: white;
      border: none;
      border-radius: 50%;
      width: 56px;
      height: 56px;
      font-size: 2rem;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    @media (max-width: 600px) {
      .container {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>
  <header>Minhas Listas</header>

  <div class="container" id="areaListas"></div>

  <button class="botao-fixo" onclick="novaLista()">+</button>

  <script>
    // Salva todas as listas no navegador
    function salvarTudo() {
      const listas = Array.from(document.querySelectorAll('.lista')).map(bloco => {
        return {
          titulo: bloco.querySelector('.titulo').innerText,
          tarefas: Array.from(bloco.querySelectorAll('.tarefa')).map(tarefa => ({
            texto: tarefa.querySelector('input[type="text"]').value,
            feita: tarefa.querySelector('input[type="checkbox"]').checked
          }))
        }
      });
      localStorage.setItem('minhasListas', JSON.stringify(listas));
    }

    // Carrega as listas salvas ao abrir a p√°gina
    function carregarListas() {
      const listasSalvas = JSON.parse(localStorage.getItem('minhasListas') || '[]');
      listasSalvas.forEach(lista => {
        criarBlocoLista(lista.titulo, lista.tarefas);
      });
    }

    function criarBlocoLista(titulo = 'Lista nova', tarefas = []) {
      const bloco = document.createElement('div');
      bloco.className = 'lista';
      bloco.innerHTML = `
        <div class="cabecalho">
          <div class="titulo" contenteditable="true">${titulo}</div>
          <div class="botao-menu" onclick="abrirMenu(this)">&#x22EE;
            <div class="opcoes">
              <button onclick="inserirTarefa(this)">‚ûï Nova tarefa</button>
              <button onclick="editarTitulo(this)">‚úèÔ∏è Renomear</button>
              <button onclick="removerLista(this)">üóëÔ∏è Apagar</button>
            </div>
          </div>
        </div>
        <div class="linha"></div>
        <div class="tarefas"></div>
      `;

      const listaTarefas = bloco.querySelector('.tarefas');
      if (tarefas.length === 0) {
        tarefas.push({ texto: 'Exemplo 1', feita: false });
      }

      tarefas.forEach(({ texto, feita }) => {
        const nova = document.createElement('div');
        nova.className = 'tarefa' + (feita ? ' concluida' : '');
        nova.innerHTML = `
          <input type="checkbox" ${feita ? 'checked' : ''} onchange="marcarFeita(this)" />
          <input type="text" value="${texto}" />
        `;
        listaTarefas.appendChild(nova);
      });

      document.getElementById('areaListas').appendChild(bloco);
      salvarTudo();
    }

    function novaLista() {
      criarBlocoLista();
    }

    function abrirMenu(botao) {
      const menu = botao.querySelector('.opcoes');
      const aberto = menu.style.display === 'flex';
      document.querySelectorAll('.opcoes').forEach(m => m.style.display = 'none');
      menu.style.display = aberto ? 'none' : 'flex';
    }

    function inserirTarefa(botao) {
      const lista = botao.closest('.lista').querySelector('.tarefas');
      const novaTarefa = document.createElement('div');
      novaTarefa.className = 'tarefa';
      novaTarefa.innerHTML = `
        <input type="checkbox" onchange="marcarFeita(this)" />
        <input type="text" value="Novo item" />
      `;
      lista.appendChild(novaTarefa);
      salvarTudo();
    }

    function editarTitulo(botao) {
      const titulo = botao.closest('.lista').querySelector('.titulo');
      titulo.focus();
      titulo.addEventListener('blur', salvarTudo, { once: true });
    }

    function removerLista(botao) {
      if (confirm("Tem certeza que quer apagar essa lista?")) {
        const bloco = botao.closest('.lista');
        bloco.remove();
        salvarTudo();
      }
    }

    function marcarFeita(caixa) {
      const item = caixa.closest('.tarefa');
      item.classList.toggle('concluida', caixa.checked);
      salvarTudo();
    }

    // Inicia carregando o que j√° estiver salvo
    window.onload = carregarListas;
  </script>
</body>
</html>
